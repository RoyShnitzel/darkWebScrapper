{"version":3,"sources":["Components/ErrorBoundary.js","Components/Loading/Loading.js","Components/KeyWordModal.js","Components/navBar.js","App.js","helpers/eventSourceHook.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","props","state","hasError","this","style","marginTop","children","Component","Loading","backgroundColor","className","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","palette","background","border","boxShadow","shadows","padding","spacing","KeyWordModal","open","setOpen","keyWordsData","fetchKeyWordsData","classes","useState","modalStyle","keyWord","setKeyWord","remove","setRemove","history","useHistory","addKeyWord","a","length","axios","post","removeKeyWord","delete","Modal","onClose","push","aria-labelledby","aria-describedby","id","textAlign","display","justifyContent","gap","map","Chip","label","TextField","onChange","event","target","value","Button","onClick","variant","color","name","root","flexGrow","menuButton","marginRight","title","link","textDecoration","search","borderRadius","shape","fade","common","white","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","notificationsData","setNotifications","setKeyWordsData","anchorEl","setAnchorEl","handleClose","index","newNotifications","splice","get","keyWords","data","console","log","useEffect","AppBar","Toolbar","IconButton","edge","aria-label","to","Typography","currentTarget","Badge","badgeContent","Menu","keepMounted","Boolean","element","MenuItem","message","NotFound","lazy","MainPage","AlertsPage","App","notifications","url","updateData","EventSource","onmessage","JSON","parse","useEventSource","prev","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.785fca50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return {\r\n      hasError: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <div style={{ marginTop: \"100px\" }}>Cannot get the page</div>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nexport default function Loading({}) {\r\n  const getBackground = () => {\r\n    return { backgroundColor: \"transparent\" };\r\n  };\r\n  return (\r\n    <div style={getBackground()} className=\"loaderContainer\">\r\n      <div className=\"loader\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function KeyWordModal({\r\n  open,\r\n  setOpen,\r\n  keyWordsData,\r\n  fetchKeyWordsData,\r\n}) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [keyWord, setKeyWord] = useState(\"\");\r\n  const [remove, setRemove] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const addKeyWord = async () => {\r\n    if (keyWord.length > 0) {\r\n      await axios.post(\"/api/keyword\", {\r\n        keyWord,\r\n      });\r\n      setKeyWord(\"\");\r\n      fetchKeyWordsData();\r\n    }\r\n  };\r\n\r\n  const removeKeyWord = async () => {\r\n    if (remove) {\r\n      await axios.delete(`/api/keyword/${remove}`);\r\n      setRemove(\"\");\r\n      fetchKeyWordsData();\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\" style={{ textAlign: \"center\" }}>\r\n            KeyWords For Analysis\r\n          </h2>\r\n          <div style={{ textAlign: \"center\" }}>KeyWords:</div>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10 }}>\r\n            {keyWordsData.length > 0\r\n              ? keyWordsData.map((keyWord) => {\r\n                  return <Chip key={keyWord.id} label={keyWord.keyWord} />;\r\n                })\r\n              : null}\r\n          </div>\r\n          <br />\r\n          <div style={{ textAlign: \"center\" }}>Enter a KeyWord to Add:</div>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10 }}>\r\n            <TextField\r\n              onChange={(event) => setKeyWord(event.target.value)}\r\n              value={keyWord}\r\n              id=\"keyword-basic\"\r\n              label=\"KeyWord\"\r\n            />\r\n            <Button\r\n              onClick={() => addKeyWord()}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </div>\r\n          <br />\r\n          <div style={{ textAlign: \"center\" }}>Choose a KeyWord to Delete:</div>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10 }}>\r\n            <select\r\n              onChange={(event) => setRemove(event.target.value)}\r\n              name=\"keywords\"\r\n              id=\"keywords\"\r\n            >\r\n              <option value=\"\">select...</option>\r\n              {keyWordsData.length > 0\r\n                ? keyWordsData.map((keyWord) => {\r\n                    return (\r\n                      <option key={keyWord.id} value={keyWord.id}>\r\n                        {keyWord.keyWord}\r\n                      </option>\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n            <Button\r\n              onClick={() => removeKeyWord()}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport KeyWordModal from \"./KeyWordModal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n    \"&:focus\": {\r\n      textDecoration: \"none\",\r\n    },\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n    \"&:visited\": {\r\n      textDecoration: \"none\",\r\n    },\r\n    \"&:link\": {\r\n      textDecoration: \"none\",\r\n    },\r\n    \"&:active\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar({ notificationsData, setNotifications }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [keyWordsData, setKeyWordsData] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    if (notificationsData.length > 0) {\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n  };\r\n  const handleReadAll = () => {\r\n    setAnchorEl(null);\r\n    setNotifications([]);\r\n  };\r\n\r\n  const handleClose = (index) => {\r\n    setAnchorEl(null);\r\n    const newNotifications = [...notificationsData];\r\n    newNotifications.splice(index, 1);\r\n    setNotifications(newNotifications);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const fetchKeyWordsData = async () => {\r\n    const { data: keyWords } = await axios.get(\"/api/keyword\");\r\n    setKeyWordsData(keyWords);\r\n  };\r\n  console.log(notificationsData);\r\n  useEffect(() => {\r\n    fetchKeyWordsData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <Link className={classes.link} to=\"/\">\r\n              <LanguageIcon />\r\n            </Link>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link className={classes.link} to=\"/\">\r\n              Dark Web Scrapper\r\n            </Link>\r\n          </Typography>\r\n          <IconButton onClick={handleMenu} color=\"inherit\">\r\n            <Badge badgeContent={notificationsData.length} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            {notificationsData.length > 0 ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.title}\r\n                  style={{ paddingLeft: 5 }}\r\n                >\r\n                  Notifications\r\n                </Typography>\r\n                <Button onClick={() => handleReadAll()}>\r\n                  Mark All As Read\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n            {notificationsData.length > 0\r\n              ? notificationsData.map((element, index) => {\r\n                  if (element.name === \"notifications-alerts\") {\r\n                    return (\r\n                      <MenuItem\r\n                        key={element.name + index}\r\n                        onClick={() => handleClose(index)}\r\n                      >\r\n                        <Link className={classes.link} to=\"/alerts\">\r\n                          <div\r\n                            style={{\r\n                              color: \"blue\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <AnnouncementIcon />\r\n                            {element.message}\r\n                          </div>\r\n                        </Link>\r\n                      </MenuItem>\r\n                    );\r\n                  } else if (element.name === \"scrapperFailed\") {\r\n                    return (\r\n                      <MenuItem\r\n                        key={element.name + index}\r\n                        onClick={() => handleClose(index)}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            color: \"red\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <ErrorIcon />\r\n                          {element.message}\r\n                        </div>\r\n                      </MenuItem>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <MenuItem\r\n                        key={element.name + index}\r\n                        onClick={() => handleClose(index)}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            color: \"green\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <CheckCircleIcon />\r\n                          {element.message}\r\n                        </div>\r\n                      </MenuItem>\r\n                    );\r\n                  }\r\n                })\r\n              : null}\r\n          </Menu>\r\n          <Link className={classes.link} to=\"/alerts\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <ErrorIcon /> Alerts\r\n              <ErrorIcon />\r\n            </IconButton>\r\n          </Link>\r\n          <Button onClick={() => setOpen(true)}>KeyWords</Button>\r\n          <KeyWordModal\r\n            open={open}\r\n            setOpen={setOpen}\r\n            keyWordsData={keyWordsData}\r\n            fetchKeyWordsData={fetchKeyWordsData}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { lazy, Suspense, useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\nimport Loading from \"./Components/Loading/Loading\";\nimport NavBar from \"./Components/navBar\";\nimport useEventSource from \"./helpers/eventSourceHook\";\n\nconst NotFound = lazy(() => import(\"./Components/NotFound\"));\nconst MainPage = lazy(() => import(\"./AppPages/mainPage\"));\nconst AlertsPage = lazy(() => import(\"./AppPages/alertsPage\"));\n\nfunction App() {\n  const [notifications, setNotifications] = useState([]);\n  const data = useEventSource(\"http://localhost:8000/notifications\");\n  useEffect(() => {\n    if (data) {\n      setNotifications((prev) => [...prev, data]);\n    }\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Suspense fallback={<Loading />}>\n          <ErrorBoundary>\n            <NavBar\n              notificationsData={notifications}\n              setNotifications={setNotifications}\n            />\n            <Switch>\n              <Route exact path=\"/alerts\">\n                <AlertsPage />\n              </Route>\n              <Route exact path=\"/\">\n                <MainPage />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </ErrorBoundary>\n        </Suspense>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function useEventSource(url) {\r\n  const [data, updateData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const source = new EventSource(url);\r\n\r\n    source.onmessage = function logEvents(event) {\r\n      updateData(JSON.parse(event.data));\r\n    };\r\n  }, []);\r\n\r\n  return data;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}